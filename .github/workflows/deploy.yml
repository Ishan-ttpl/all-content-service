name: Deploy or Rollback All-Content-Service

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - rollback
      environment:
        description: 'Target environment'
        required: true
        default: 'tn-staging'
        type: choice
        options:
          - tn-staging
      branch:
        description: 'Branch to deploy (only for deploy)'
        required: false
        default: 'lais-v2.0'
      rollback_tag:
        description: 'Tag to rollback to (only for rollback)'
        required: false

jobs:
  deploy-or-rollback:
    runs-on: ubuntu-latest
    environment: tn-staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch || 'lais-v2.0' }}

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.SSH_KEY }}" > key.pem
          chmod 600 key.pem
          echo "host=${{ secrets.TN_STAGING_HOST }}" >> "$GITHUB_ENV"
          echo "jump_host=${{ secrets.JUMPHOST }}" >> "$GITHUB_ENV"
          echo "target_dir=/home/all-staging-user/all-services/all-content-deploy" >> "$GITHUB_ENV"

      - name: Execute ${{ github.event.inputs.action }}
        run: |
          ACTION="${{ github.event.inputs.action }}"
          HOST="${{ env.host }}"
          JUMP_HOST="${{ env.jump_host }}"
          TARGET_DIR="${{ env.target_dir }}"
          BRANCH="${{ github.event.inputs.branch }}"
          ROLLBACK_TAG="${{ github.event.inputs.rollback_tag }}"

          SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i key.pem -J $JUMP_HOST $HOST"

          if [[ "$ACTION" == "deploy" ]]; then
            echo "Deploying branch $BRANCH to $HOST"
            $SSH_COMMAND "cd $TARGET_DIR && chmod +x deploy.sh && ./deploy.sh $TARGET_DIR $BRANCH deploy"
          elif [[ "$ACTION" == "rollback" ]]; then
            if [[ -z "$ROLLBACK_TAG" ]]; then
              echo '::error::Rollback tag is required'
              exit 1
            fi
            echo "Rolling back to tag $ROLLBACK_TAG on $HOST"
            $SSH_COMMAND "cd $TARGET_DIR && chmod +x deploy.sh && ./deploy.sh $TARGET_DIR $ROLLBACK_TAG rollback"
          else
            echo "::error::Invalid action: $ACTION"
            exit 1
          fi
